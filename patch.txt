diff --git a/CMakeLists.txt b/CMakeLists.txt
index be00ded..71b1567 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -19,6 +19,13 @@ elseif (USE_SANITIZER STREQUAL "Memory")
     set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fsanitize=memory")
 endif()
 
+# -----------------------------------------------------------------------------
+# |                             CONAN INTEGRATION                             |
+# -----------------------------------------------------------------------------
+
+include(../conanbuildinfo.cmake)
+conan_basic_setup(TARGETS)
+
 # ------------------------------------------------------------------------------
 # |                             PLATFORM DETECTION                             |
 # ------------------------------------------------------------------------------
@@ -446,7 +453,7 @@ if(NOT ZTS_DISABLE_CENTRAL_API)
     find_package(CURL)
     if(CURL_FOUND)
         include_directories(${CURL_INCLUDE_DIR})
-        set(requiredlibs ${requiredlibs} ${CURL_LIBRARIES})
+        set(requiredlibs ${requiredlibs} ${CURL_LIBRARIES} "CONAN_PKG::libcurl")
     else(CURL_FOUND)
         message(
             FATAL_ERROR "Could not find the CURL library and development files.")
@@ -663,7 +670,7 @@ if(BUILD_STATIC_LIB)
             ${shlwapi_LIBRARY_PATH} ${iphlpapi_LIBRARY_PATH})
     endif()
     if(NOT ZTS_DISABLE_CENTRAL_API)
-        target_link_libraries(${STATIC_LIB_NAME} ${CURL_LIBRARIES})
+        target_link_libraries(${STATIC_LIB_NAME} ${CURL_LIBRARIES} "CONAN_PKG::libcurl")
     endif()
 endif() # BUILD_STATIC_LIB
 
@@ -700,7 +707,7 @@ if(BUILD_SHARED_LIB)
         target_link_libraries(${DYNAMIC_LIB_NAME} android log)
     endif()
     if(NOT ZTS_DISABLE_CENTRAL_API)
-        target_link_libraries(${DYNAMIC_LIB_NAME} ${CURL_LIBRARIES})
+        target_link_libraries(${DYNAMIC_LIB_NAME} ${CURL_LIBRARIES} "CONAN_PKG::libcurl")
     endif()
 endif() # BUILD_SHARED_LIB
 
diff --git a/include/ZeroTierSockets.h b/include/ZeroTierSockets.h
index 98058e9..e135554 100644
--- a/include/ZeroTierSockets.h
+++ b/include/ZeroTierSockets.h
@@ -197,7 +197,7 @@ typedef enum {
 /**
  * Error variable set after each `zts_*` socket call. Provides additional error context.
  */
-extern int zts_errno;
+// extern int zts_errno; // see line 1021
 
 typedef enum {
     /** Operation not permitted */
@@ -1003,22 +1003,28 @@ typedef struct {
 //----------------------------------------------------------------------------//
 
 #if defined(_WIN32)
-#ifdef ADD_EXPORTS
-#define ZTS_API __declspec(dllexport)
+    #ifndef ZTS_STATIC
+        #ifdef ADD_EXPORTS
+            #define ZTS_API __declspec(dllexport)
+        #else
+            #define ZTS_API __declspec(dllimport)
+        #endif
+    #else
+        #define ZTS_API
+    #endif
+ 	#define ZTCALL __cdecl
 #else
-#define ZTS_API __declspec(dllimport)
-#endif
-#define ZTCALL __cdecl
-#else
-#define ZTS_API
-#define ZTCALL
+    #define ZTS_API
+    #define ZTCALL
 #endif
 
+extern ZTS_API int zts_errno;
+
 //----------------------------------------------------------------------------//
 // Central API                                                                //
 //----------------------------------------------------------------------------//
 
-#define ZTS_DISABLE_CENTRAL_API 1
+// #define ZTS_DISABLE_CENTRAL_API 1
 
 #ifndef ZTS_DISABLE_CENTRAL_API
 
